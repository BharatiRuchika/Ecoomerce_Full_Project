[{"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/index.js":"1","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/App.js":"2","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/store.js":"3","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/Home.js":"4","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/Header.js":"5","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/Footer.js":"6","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/product/productdetails.js":"7","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Login.js":"8","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/productReducers.js":"9","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/userReducers.js":"10","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/MetaData.js":"11","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/product/product.js":"12","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/loader.js":"13","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/search.js":"14","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/productActions.js":"15","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/userActions.js":"16","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/userConstants.js":"17","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/productConstants.js":"18","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Register.js":"19","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Profile.js":"20","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/route/ProtectedRoute.js":"21","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/updateProfile.js":"22","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/UpdatePassword.js":"23","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/ForgotPassword.js":"24","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/NewPassword.js":"25","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/cartReducers.js":"26","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/cartConstants.js":"27","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/cartActions.js":"28","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Cart.js":"29","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Shipping.js":"30","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/checkoutSteps.js":"31","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/ConfirmOrder.js":"32","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Payment.js":"33","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/orderReducers.js":"34","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/orderActions.js":"35","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/OrderSuccess.js":"36","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/order/ListOrders.js":"37","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/order/Order_Details.js":"38","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/Dashboard.js":"39","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/Sidebar.js":"40","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProductList.js":"41","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/NewProduct.js":"42","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UpdateProduct.js":"43","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/OrderList.js":"44","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProcessOrder.js":"45","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/orderConstants.js":"46","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UsersList.js":"47","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UpdateUser.js":"48","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProductReview.js":"49","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/review/ListReviews.js":"50"},{"size":588,"mtime":1641219184406,"results":"51","hashOfConfig":"52"},{"size":5319,"mtime":1645347971783,"results":"53","hashOfConfig":"52"},{"size":1622,"mtime":1641737686326,"results":"54","hashOfConfig":"52"},{"size":11242,"mtime":1641982791516,"results":"55","hashOfConfig":"52"},{"size":2708,"mtime":1641836530747,"results":"56","hashOfConfig":"52"},{"size":305,"mtime":1641019316088,"results":"57","hashOfConfig":"52"},{"size":9038,"mtime":1641739424778,"results":"58","hashOfConfig":"52"},{"size":2709,"mtime":1645194657048,"results":"59","hashOfConfig":"52"},{"size":6696,"mtime":1641737591085,"results":"60","hashOfConfig":"52"},{"size":5820,"mtime":1641807087738,"results":"61","hashOfConfig":"52"},{"size":223,"mtime":1641039709064,"results":"62","hashOfConfig":"52"},{"size":1555,"mtime":1641836957193,"results":"63","hashOfConfig":"52"},{"size":178,"mtime":1641054900343,"results":"64","hashOfConfig":"52"},{"size":971,"mtime":1641126818313,"results":"65","hashOfConfig":"52"},{"size":6221,"mtime":1645165937344,"results":"66","hashOfConfig":"52"},{"size":7717,"mtime":1641892282783,"results":"67","hashOfConfig":"52"},{"size":2207,"mtime":1641660128196,"results":"68","hashOfConfig":"52"},{"size":1900,"mtime":1641737456616,"results":"69","hashOfConfig":"52"},{"size":4447,"mtime":1641880353545,"results":"70","hashOfConfig":"52"},{"size":1739,"mtime":1641811122803,"results":"71","hashOfConfig":"52"},{"size":956,"mtime":1641891564135,"results":"72","hashOfConfig":"52"},{"size":5088,"mtime":1641300695193,"results":"73","hashOfConfig":"52"},{"size":2829,"mtime":1641888694291,"results":"74","hashOfConfig":"52"},{"size":2086,"mtime":1641314010046,"results":"75","hashOfConfig":"52"},{"size":2643,"mtime":1641315054117,"results":"76","hashOfConfig":"52"},{"size":1107,"mtime":1641834862670,"results":"77","hashOfConfig":"52"},{"size":200,"mtime":1641834316050,"results":"78","hashOfConfig":"52"},{"size":1048,"mtime":1641392838726,"results":"79","hashOfConfig":"52"},{"size":4316,"mtime":1641390727882,"results":"80","hashOfConfig":"52"},{"size":4888,"mtime":1641554000422,"results":"81","hashOfConfig":"52"},{"size":1828,"mtime":1641399407921,"results":"82","hashOfConfig":"52"},{"size":3219,"mtime":1641627847527,"results":"83","hashOfConfig":"52"},{"size":4785,"mtime":1645185969911,"results":"84","hashOfConfig":"52"},{"size":4892,"mtime":1641662860903,"results":"85","hashOfConfig":"52"},{"size":3969,"mtime":1641894654598,"results":"86","hashOfConfig":"52"},{"size":936,"mtime":1641834832652,"results":"87","hashOfConfig":"52"},{"size":2523,"mtime":1641542938889,"results":"88","hashOfConfig":"52"},{"size":3800,"mtime":1641487238410,"results":"89","hashOfConfig":"52"},{"size":5716,"mtime":1641648596630,"results":"90","hashOfConfig":"52"},{"size":1659,"mtime":1641540346091,"results":"91","hashOfConfig":"52"},{"size":3679,"mtime":1641886265574,"results":"92","hashOfConfig":"52"},{"size":6658,"mtime":1641570953205,"results":"93","hashOfConfig":"52"},{"size":7864,"mtime":1641887374738,"results":"94","hashOfConfig":"52"},{"size":3501,"mtime":1641637175766,"results":"95","hashOfConfig":"52"},{"size":5815,"mtime":1641627029192,"results":"96","hashOfConfig":"52"},{"size":1156,"mtime":1641631135168,"results":"97","hashOfConfig":"52"},{"size":3260,"mtime":1641661632697,"results":"98","hashOfConfig":"52"},{"size":4581,"mtime":1641659750478,"results":"99","hashOfConfig":"52"},{"size":5216,"mtime":1641738939585,"results":"100","hashOfConfig":"52"},{"size":713,"mtime":1641739246052,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"ovknuh",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"104"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"104"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/index.js",[],["231","232"],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/App.js",["233","234","235"],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/store.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/Home.js",["236","237"],"import React, { useEffect, useState,Fragment } from 'react'\nimport '../App.css';\nimport MetaData from './layouts/MetaData';\nimport Product from './product/product';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../actions/productActions';\nimport Loader from \"../components/layouts/loader\";\nimport { useAlert } from 'react-alert';\nimport Pagination from \"react-js-pagination\";\nimport slider from 'rc-slider';\nimport product from './product/product';\nimport 'rc-slider/assets/index.css';\nconst { createSliderWithTooltip } = slider;\nconst Range = createSliderWithTooltip(slider.Range);\n\nconst Home = ({ match }) => {\n    console.log(\"im in home componennt\");\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState(\"\");\n    const [rating,setRating] = useState(0);\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"outdoor\",\n        \"Home\"\n    ]\n    const dispatch = useDispatch();\n    const alert = useAlert();\n    const {filteredProductsCount, loading, products, error, productsCount, resPerPage } = useSelector(state => state.products);\n    const keyword = match.params.keyword\n    console.log(\"filteredProductsCount\",filteredProductsCount);\n    useEffect(() => {\n      \n        console.log(\"im in useEffetc\");\n        if (error) {\n            return alert.error(error);\n        }\n        console.log(\"current page home\", currentPage)\n        dispatch(getProducts(keyword, currentPage, price, category,rating));\n        console.log(\"products\", products);\n    }, [dispatch, alert, error, keyword, currentPage, price,category,rating])\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n  let count = productsCount;\n  if(filteredProductsCount){\n      count=filteredProductsCount;\n  }\n  console.log(\"count\",count);\n    return (\n//         <>\n//             {loading ? <Loader /> : (\n//                 <>\n//                     <MetaData title={\"Buy Best Products Online\"}></MetaData>\n                    \n//                     <h1 id=\"products_heading\">Latest Products</h1>\n\n//                     <section id=\"products\" className=\"container mt-5\">\n//                         <div className=\"row\">\n                           \n//                             {keyword ? <>\n//                                 <div className=\"col-6 col-md-3 mt-5 mb-5\">\n//                                     <div className=\"px-5\">\n//                                         <Range marks={{ 1: '$1', 1000: '$1000' }} min={1} max={1000} defaultValue={[1, 1000]} tipFormatter={value => `$${value}`} tipProps={{ placement: \"top\", visible: true }} value={price} onChange={price => setPrice(price)} />\n//                                         <hr className=\"my-5\"></hr>\n//                                         <div className=\"mt-5\">\n//                                             <h4 className=\"mb-3\">Categories</h4>\n//                                             <ul className=\"pl-0\">\n//                                                 {categories.map(category => (\n//                                                     <li\n//                                                         style={{\n//                                                             cursor: 'pointer',\n//                                                             listStyleType: 'none'\n//                                                         }}\n//                                                         key={category}\n//                                                         onClick={() => setCategory(category)}\n//                                                     >\n//                                                         {category}\n//                                                     </li>\n//                                                 ))}\n//                                             </ul>\n//                                     </div>\n//                                 <hr className=\"my-3\"></hr>\n//                                 <div className=\"mt-5\">\n//                                 <h4 className=\"mb-3\">Ratings</h4>\n//                     <ul className=\"pl-0\">\n//                     {[5,4,3,2,1].map(star => (\n//                     <li\n//                     style={{\n//                     cursor: 'pointer',\n//                     listStyleType: 'none'\n//                     }}\n//                 key={star}\n//                 onClick={() => setRating(star)}>\n//                   <div className=\"rating-outer\">\n//                       <div className=\"rating-inner\" style={{width:`${star*20}%`}}>\n\n//                       </div>\n//                   </div>\n//             </li>\n//             ))}\n//         </ul>\n//      </div>\n//    </div>\n// </div>\n//         <div className=\"col-6 col-md-9\">\n//             <div className=\"row\">\n//             {products.map(product => (\n//             <Product key={product._id} product={product} col={4} />\n//         ))}\n//     </div>\n// </div>\n// </> : (\n//     products && products.map(product => (\n//     <Product id={product._id} product={product} col={3} />\n//     ))\n// )}\n\n\n//                         </div>\n//                     </section>\n                   \n//                     {resPerPage<count && (\n//  <div className=\"d-flex justify-content-center mt-5\">\n\n//  <Pagination\n//      activePage={currentPage}\n//      itemsCountPerPage={resPerPage}\n//      totalItemsCount={productsCount}\n//      onChange={setCurrentPageNo}\n//      nextPageText={'Next'}\n//      prevPageText={'Prev'}\n//      firstPageText={'First'}\n//      lastPageText={'Last'}\n//      itemClass=\"page-item\"\n//      linkClass=\"page-link\"\n//  />\n//  </div>\n//                     )}\n                   \n\n\n                 \n                  \n                  \n//                 </>\n//             )}\n\n\n//         </>\n\n\n<Fragment>\n{loading ? <Loader /> : (\n    <Fragment>\n        <MetaData title={'Buy Best Products Online'} />\n\n        <h1 id=\"products_heading\">Latest Products</h1>\n\n        <section id=\"products\" className=\"container mt-5\">\n            <div className=\"row\">\n\n                {keyword ? (\n                    <Fragment>\n                        <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                            <div className=\"px-5\">\n                                <Range\n                                    marks={{\n                                        1: `$1`,\n                                        1000: `$1000`\n                                    }}\n                                    min={1}\n                                    max={1000}\n                                    defaultValue={[1, 1000]}\n                                    tipFormatter={value => `$${value}`}\n                                    tipProps={{\n                                        placement: \"top\",\n                                        visible: true\n                                    }}\n                                    value={price}\n                                    onChange={price => setPrice(price)}\n                                />\n\n                                <hr className=\"my-5\" />\n\n                                <div className=\"mt-5\">\n                                    <h4 className=\"mb-3\">\n                                        Categories\n                                    </h4>\n\n                                    <ul className=\"pl-0\">\n                                        {categories.map(category => (\n                                            <li\n                                                style={{\n                                                    cursor: 'pointer',\n                                                    listStyleType: 'none'\n                                                }}\n                                                key={category}\n                                                onClick={() => setCategory(category)}\n                                            >\n                                                {category}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    </div>\n\n<hr className=\"my-3\" />\n\n<div className=\"mt-5\">\n    <h4 className=\"mb-3\">\n        Ratings\n    </h4>\n\n    <ul className=\"pl-0\">\n        {[5, 4, 3, 2, 1].map(star => (\n            <li\n                style={{\n                    cursor: 'pointer',\n                    listStyleType: 'none'\n                }}\n                key={star}\n                onClick={() => setRating(star)}\n            >\n                <div className=\"rating-outer\">\n                    <div className=\"rating-inner\"\n                        style={{\n                            width: `${star * 20}%`\n                        }}\n                    >\n                          </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                            {products.map(product => (\n                                                <Product key={product._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ) : (\n                                    products.map(product => (\n                                        <Product key={product._id} product={product} col={3} />\n                                    ))\n                                )}\n                                  </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home;\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/Header.js",["238"],"import React from 'react';\nimport '../../App.css';\nimport {Route,Link} from \"react-router-dom\";\nimport Search from './search';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport {logoutUser} from \"../../actions/userActions\";\n// import \"../../App.css\";\nimport '../../App.css'\nconst Header=()=>{\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { user, loading } = useSelector(state => state.auth);\n  const {cartItems} = useSelector(state=>state.cart)\n  console.log(\"cartItems\",cartItems);\n  // console.log(\"user\",user);\n  // console.log(\"loading\",loading);\n  const logoutHandler = ()=>{\n    dispatch(logoutUser());\n    alert.success(\"Logged out Successfully...\");\n  }\n  // console.log(\"user\",isEmpty(user));\n    return(\n   <>\n    <nav className=\"navbar row\">\n      <div className=\"col-12 col-md-3\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\">\n          <img src=\"/images/shopit_logo.png\" />\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n         <Route render={({history})=><Search history={history}/>}/>\n      </div>\n\n      <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n      { user && user.role===\"user\" &&  <Link to=\"/cart\" style={{textDecoration:\"none\"}}>\n        <span id=\"cart\" className=\"ml-3\">Cart</span>\n        <span className=\"ml-1\" id=\"cart_count\">\n          \n          {cartItems==null ? 0 :cartItems.length}\n          </span>\n        </Link>}\n\n        {user ? (\n          <div className=\"ml-4 dropdown d-inline\">\n             <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n<figure className=\"avatar avatar-nav\">\n    <img\n        src={user.avatar && user.avatar.url}\n        alt={user && user.name}\n        className=\"rounded-circle\"\n    />\n</figure>\n<span>{user && user.name}</span>\n</Link>\n<div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n{user && user.role==='admin' ?\n<>\n  <Link to=\"/dashboard\" className=\"dropdown-item\">Dashboard</Link>\n  <Link to=\"/me\" className=\"dropdown-item\">Profile</Link>\n<Link className=\"dropdown-item text-danger\" onClick={logoutHandler} to=\"/\">\n   Logout\n</Link></>:\n<>\n<Link to=\"/orders/me\" className=\"dropdown-item\">Orders</Link>\n<Link to=\"/me\" className=\"dropdown-item\">Profile</Link>\n<Link className=\"dropdown-item text-danger\" onClick={logoutHandler} to=\"/\">\n   Logout\n</Link>\n</>}\n \n</div>\n          </div>\n        ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n      </div>\n    </nav>\n\n   \n   </>)\n}\nexport default Header;","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/Footer.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/product/productdetails.js",["239","240","241"],"import React,{useEffect,useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux'\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getProductDetails,clearErrors,newReview } from '../../actions/productActions';\nimport ListReviews from '../review/ListReviews'\nimport Loader from \"../layouts/loader\";\nimport { useAlert } from 'react-alert';\n// import '../../App.css';\nimport { Carousel } from 'react-bootstrap';\nimport MetaData from \"../layouts/MetaData\";\nimport { CLEAR_ERRORS,NEW_REVIEW_RESET } from '../../constants/productConstants';\nimport {addItemsCart} from \"../../actions/cartActions\";\nconst ProductDetails = ({match}) => {\n    const [quantity,setQuantity] = useState(1);\n    const [comment, setComment] = useState('');\n    const [rating, setRating] = useState(0);\n    const dispatch = useDispatch();\n    const alert = useAlert();\n    console.log(match.params.id);\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    const {user} = useSelector(state=>state.auth);\n    const {error:reviewError,success} = useSelector(state=>state.newReview);\n    console.log(\"loading\",loading);\n    console.log(\"product\",product);\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n        console.log(match.params.id);\n        dispatch(getProductDetails(match.params.id))\n        if(error){\n           alert.error(error)\n           dispatch(CLEAR_ERRORS)\n       }\n       if(reviewError){\n        alert.error(error)\n        dispatch(CLEAR_ERRORS)\n    } \n    if (success) {\n        alert.success('Reivew posted successfully')\n        dispatch({ type: NEW_REVIEW_RESET })\n    }\n\n    }, [dispatch,alert,error,reviewError,success])\n    const increaseQty = ()=>{\n        const count = document.querySelector(\".count\");\n        console.log(\"stock\",product.stock)\n        if(count.valueAsNumber>=product.stock)\n        return\n        const qty = count.valueAsNumber + 1;\n        setQuantity(qty);\n    }\n\n    const decreaseQty = ()=>{\n        const count = document.querySelector(\".count\");\n        if(count.valueAsNumber<=1)\n        return\n        const qty = count.valueAsNumber - 1;\n        setQuantity(qty);\n    }\n    const addToCart = ()=>{\n        dispatch(addItemsCart(match.params.id,quantity))\n        alert.success(\"item added to cart\");\n    }\n   \n    function setUserRatings() {\n        const stars = document.querySelectorAll('.star');\n  console.log(\"stars\",stars);\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n function showRatings(e) {\n        stars.forEach((star, index) => {\n            if (e.type === 'click') {\n                if (index < this.starValue) {\n                    star.classList.add('orange');\n\n                    setRating(this.starValue)\n                } else {\n                    star.classList.remove('orange')\n                }\n            }\n\n            if (e.type === 'mouseover') {\n                if (index < this.starValue) {\n                    star.classList.add('yellow');\n                } else {\n                    star.classList.remove('yellow')\n                }\n            }\n\n            if (e.type === 'mouseout') {\n                star.classList.remove('yellow')\n            }\n        })\n    \n    }\n}\n const reviewHandler = ()=>{\n        console.log(\"im in review handker\");\n        console.log(\"rating\",rating);\n        console.log(\"comment\",comment);\n        console.log(\"productId\",match.params.id);\n        const formData = new FormData();\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', match.params.id);\n        dispatch(newReview(formData));\n    }\n    return (<>\n  {loading?<Loader/>:(\n            <>\n            \n           \n            <div className=\"row f-flex justify-content-around\">\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n               <Carousel pause='hover'>\n              {product && product.images && product.images.map(image=>(\n                   <Carousel.Item key={image.public_id}>\n                   <img className=\"d-block w-100\" src={image.url} alt={product.title} />\n               </Carousel.Item>\n               \n                 \n              ))}\n               </Carousel>\n            </div>\n\n            <div className=\"col-12 col-lg-5 mt-5\">\n                <h3>{product.name}</h3>\n                <p id={product}>Product # {product._id}</p>\n\n                <hr/>\n\n                <div className=\"rating-outer\">\n                    <div className=\"rating-inner\" style={{width:`${(product.ratings/5)*100}%`}}></div>\n                </div>\n                <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n\n                <hr/>\n\n                <p id=\"product_price\">${product.price}</p>\n                <div className=\"stockCounter d-inline\">\n                    <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\n                    <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\n\n<span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\n</div>\n<button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock===0} onClick={addToCart}>Add to Cart</button>\n\n<hr/>\n\n<p>Status: <span id=\"stock_status\" className={product.stock>0?'greenColor':'redColor'}>{product.stock>0?'In Stock':'Out of Stock'}</span></p>\n\n<hr/>\n\n<h4 className=\"mt-2\">Description:</h4>\n<p>{product.description}</p>\n<hr/>\n<p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\n{user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n        Submit Your Review\n</button>:<div className=\"alert alert-danger mt-5\"> Login to submit your review</div>}\n\n\n<div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {product.reviews && product.reviews.length > 0 && (\n                        <ListReviews reviews={product.reviews} />\n                    )} \n  </>\n            )}\n        </>\n    )\n}\n\nexport default ProductDetails\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Login.js",["242"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from 'react-router-dom';\nimport {login,clearErrors} from \"../../actions/userActions\";\nconst Login = ({history,location}) => {\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {isAuthenticated,loading,error} = useSelector(state=>state.auth);\n    console.log(\"location\",location);\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n   console.log(\"redirect\",redirect);\n  \n    useEffect(() => {\n      if(isAuthenticated){\n        history.push(redirect);\n    }\n        console.log(\"im in login\");\n       if(error){\n         console.log(\"error is true\",error);\n          //  alert.error(error);\n           dispatch(clearErrors());\n       }\n    }, [dispatch,alert,isAuthenticated,error,history])\n    const submitHandler = (e)=>{\n     e.preventDefault();\n     console.log(\"im in submit handler\");\n     console.log(email,password);\n     dispatch(login(email,password))\n    }\n    return (\n       <>\n        {loading?<Loader/>:(\n            <>\n            <MetaData title={'Login'}/>\n             <div className=\"row wrapper\"> \n\t\t<div className=\"col-10 col-lg-5\">\n        <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <h1 className=\"mb-3\">Login</h1>\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email_field\"\n                className=\"form-control\"\n                value={email}\n                onChange={(e)=>setEmail(e.target.value)}\n              />\n            </div>\n  \n            <div className=\"form-group\">\n              <label htmlFor=\"password_field\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password_field\"\n                className=\"form-control\"\n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n              />\n            </div>\n\n    <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n  \n            <button\n              id=\"login_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n            >\n              LOGIN\n            </button>\n\n            <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n          </form>\n\t\t  </div>\n    </div>\n           </>\n        )}\n       </>\n    )\n}\n\nexport default Login\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/productReducers.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/userReducers.js",["243"],"import { Carousel } from \"react-bootstrap\";\nimport {LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAIL,CLEAR_ERRORS,REGISTER_USER_SUCCESS,REGISTER_USER_REQUEST,REGISTER_USER_FAIL,\nLOAD_USER_SUCCESS,LOAD_USER_REQUEST,LOAD_USER_FAIL,LOGOUT_SUCCESS,LOGOUT_FAIL,\nUPDATE_PASSWORD_FAIL,\nUPDATE_PASSWORD_REQUEST,\nUPDATE_PASSWORD_SUCCESS,\nUPDATE_PASSWORD_RESET,\nUPDATE_PROFILE_FAIL,\nUPDATE_PROFILE_REQUEST,\nUPDATE_PROFILE_SUCCESS,\nUPDATE_PROFILE_RESET,\nFORGOT_PASSWORD_FAIL,\nFORGOT_PASSWORD_REQUEST,\nFORGOT_PASSWORD_SUCCESS,\nNEW_PASSWORD_FAIL,\nNEW_PASSWORD_REQUEST,\nNEW_PASSWORD_SUCCESS,\nALL_USERS_FAIL,\nALL_USERS_REQUEST,\nALL_USERS_SUCCESS,\nUPDATE_USER_FAIL,\nUPDATE_USER_REQUEST,\nUPDATE_USER_SUCCESS,\nUPDATE_USER_RESET,\nUSER_DETAILS_REQUEST,\nUSER_DETAILS_SUCCESS,\nUSER_DETAILS_FAIL,\nDELETE_USER_SUCCESS,\nDELETE_USER_REQUEST,\nDELETE_USER_FAIL,\nDELETE_USER_RESET\n} from \"../constants/userConstants\";\nexport const authReducer = (state={user:{}},action)=>{\n  switch(action.type){\n    case LOAD_USER_REQUEST:\n      case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n       \n            console.log(\"im in load user request0\");\n          return {\n              loading:true,\n              isAuthenticated:false\n          }\n          case LOAD_USER_SUCCESS:\n      case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n       \n            console.log(\"im in LOAD_USER_SUCCESS\");\n            console.log(\"user\",action.payload);\n          return {\n              ...state,\n              loading:false,\n              isAuthenticated:true,\n              user:action.payload\n          }\n        case LOAD_USER_FAIL:\n            return {\n              \n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n        case LOGOUT_SUCCESS:\n          return {\n            loading:false,\n            isAuthenticated: false,\n            user : null,\n        }\n        case LOGOUT_FAIL:\n          return {\n            ...state,\n            error: action.payload\n          }\n        \n        \n       case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n        console.log(\"im in login fail\");\n        console.log(action.payload);\n           return {\n            ...state,\n            loading:false,\n            isAuthenticated:false,\n            user:null,\n            error:action.payload\n           }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error:null\n            }\n    default:\n        return state;\n  }\n}\n\nexport const userReducer = (state={},action)=>{\n \n   switch(action.type){\n       case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n          case UPDATE_USER_REQUEST:\n            case DELETE_USER_REQUEST:\n     return {\n       ...state,\n       loading:true\n     }\n     case UPDATE_PROFILE_SUCCESS:\n      case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n     return {\n      ...state,\n      loading:false,\n      isUpdated:action.payload\n     }\n     case DELETE_USER_SUCCESS:\n       console.log(\"deletde\",action.payload);\n      return {\n          ...state,\n          loading: false,\n          isDeleted: action.payload\n      }\n     case UPDATE_PROFILE_FAIL:\n      case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n          case DELETE_USER_FAIL:\n       return {\n         ...state,\n         loading:false,\n         error:action.payload\n       }\n       case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n          case UPDATE_USER_RESET:\n            \n         return {\n           ...state,\n           isUpdated:false\n         }\n         case DELETE_USER_RESET:\n          return {\n              ...state,\n              isDeleted: false\n          }\n         case CLEAR_ERRORS:\n          return {\n              ...state,\n              error:null\n          }\n         default:\n          return state;\n   }\n}\n\n\nexport const forgotPasswordReducer = (state={},action)=>{\n  switch(action.type){\n     \n       case FORGOT_PASSWORD_REQUEST:\n      case NEW_PASSWORD_REQUEST:\n    return {\n      ...state,\n      loading:true,\n      error:null\n    }\n   \n     case FORGOT_PASSWORD_SUCCESS:\n    return {\n     ...state,\n     loading:false,\n    message:action.payload\n    }\n   case NEW_PASSWORD_SUCCESS:\n     return {\n       ...state,\n       success:action.payload\n     }\n     case FORGOT_PASSWORD_FAIL:\n      case NEW_PASSWORD_FAIL:\n      return {\n        ...state,\n        loading:false,\n        error:action.payload\n      }\n    \n        case CLEAR_ERRORS:\n         return {\n             ...state,\n             error:null\n         }\n        default:\n         return state;\n  }\n}\n\n\nexport const allUsersReducer = (state={users:[]},action)=>{\n  switch(action.type){\n     case ALL_USERS_REQUEST:\n     return {\n      ...state,\n      loading:true,\n    }\n    case ALL_USERS_SUCCESS:\n    return {\n     ...state,\n     loading:false,\n     users:action.payload\n    }\n   case ALL_USERS_FAIL:\n      return {\n        ...state,\n        loading:false,\n        error:action.payload\n      }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error:null\n      }\n    default:\n      return state;\n  }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n\n      case USER_DETAILS_REQUEST:\n          return {\n              ...state,\n              loading: true,\n          }\n\n      case USER_DETAILS_SUCCESS:\n          return {\n              ...state,\n              loading: false,\n              user: action.payload\n          }\n\n      case USER_DETAILS_FAIL:\n          return {\n              ...state,\n              loading: false,\n              error: action.payload\n          }\n\n      case CLEAR_ERRORS:\n          return {\n              ...state,\n              error: null\n          }\n\n      default:\n          return state;\n  }\n}","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/MetaData.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/product/product.js",["244","245"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nconst Product = ({product,col}) => {\n  const { user, loading } = useSelector(state => state.auth);\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n             <div className=\"card p-3 rounded\">\n               <img\n                 className=\"card-img-top mx-auto\"\n                 src={product.images[0].url}\n               />\n              \n               <div className=\"card-body d-flex flex-column\">\n                 <h5 className=\"card-title\">\n                   {user && user.role===\"user\"?\n                 <Link to={`/product/${product._id}`}>{product.name}</Link>:  \n                 <p>{product.name}</p>\n                }\n                  \n                 </h5>\n                 <div className=\"ratings mt-auto\">\n                 <div className=\"rating-outer\">\n                         <div className=\"rating-inner\" style={{width:`${(product.ratings/5)*100}%`}}></div>\n                       </div>\n                       <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                     </div>\n                     <p className=\"card-text\">${product.price}</p>\n                     {user && user.role===\"user\" &&\n                     <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                     }\n                     \n                   </div>\n                 </div>\n               </div>\n    )\n}\n\nexport default Product\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/loader.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/layouts/search.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/productActions.js",["246"],"import axios from \"axios\";\nimport {ALL_PRODUCTS_REQUEST,ALL_PRODUCTS_SUCCESS,ALL_PRODUCTS_FAIL,CLEAR_ERRORS,PRODUCTS_DETAILS_FAIL,PRODUCTS_DETAILS_SUCCESS,PRODUCTS_DETAILS_REQUEST,NEW_REVIEW_SUCCESS,NEW_REVIEW_REQUEST,NEW_REVIEW_FAIL,ADMIN_PRODUCTS_FAIL,ADMIN_PRODUCTS_REQUEST,ADMIN_PRODUCTS_SUCCESS, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL,DELETE_PRODUCT_FAIL,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_REQUEST,UPDATE_PRODUCT_FAIL,UPDATE_PRODUCT_REQUEST,UPDATE_PRODUCT_SUCCESS,GET_REVIEWS_REQUEST,GET_REVIEWS_SUCCESS,GET_REVIEWS_FAIL,DELETE_REVIEW_REQUEST,DELETE_REVIEW_SUCCESS,DELETE_REVIEW_RESET,DELETE_REVIEW_FAIL} from \"../constants/productConstants\";\nexport const getProducts = (keyword=\"\",currentPage=1,price,category,rating=0)=>async (dispatch)=>{\n  \n    console.log(\"im in get Products\");\n    console.log(\"currentPage\",currentPage);\n    console.log(\"keyword\",keyword);\n    console.log(\"getcategory\",category);\n    try{\n      dispatch({type:ALL_PRODUCTS_REQUEST})\n  \n      let link = `/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n      if(category){\n        link = `/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n      }\n      const {data} = await axios.get(link);\n      console.log(\"productdata\",data);\n      dispatch({\n          type:ALL_PRODUCTS_SUCCESS,\n          payload:data\n      })\n    }catch(error){\n        dispatch({\n            type:ALL_PRODUCTS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const getProductDetails = (id)=>async (dispatch)=>{\n    try{\n        console.log(\"im in product details actions\");\n      dispatch({type:PRODUCTS_DETAILS_REQUEST})\n      const {data} = await axios.get(`/products/getproduct/${id}`);\n      console.log(\"actiondata\",data.product);\n      dispatch({\n          type:PRODUCTS_DETAILS_SUCCESS,\n          payload:data.product\n      })\n    }catch(error){\n        dispatch({\n            type:PRODUCTS_DETAILS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const newReview = (reviewData)=>async (dispatch)=>{\n    console.log(\"im in new review action\");\n    console.log(\"reviewdata\",reviewData);\n    try{\n        console.log(\"im in product details actions\");\n      dispatch({type:NEW_REVIEW_REQUEST})\n      const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n      }\n      const {data} = await axios.put(`/products/review`,reviewData,config);\n      console.log(\"newreviewdata\",data.success);\n      dispatch({\n          type:NEW_REVIEW_SUCCESS,\n          payload:data.success\n      })\n    }catch(error){\n        dispatch({\n            type:NEW_REVIEW_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get admin producrs\nexport const getAdminProducts = ()=>async (dispatch)=>{\n    try{\n        console.log(\"im in admin product details actions\");\n      dispatch({type:ADMIN_PRODUCTS_REQUEST})\n      const {data} = await axios.get(`/products/admin/getproducts`);\n      console.log(\"actiondata\",data.product);\n      dispatch({\n          type:ADMIN_PRODUCTS_SUCCESS,\n          payload:data.products\n      })\n    }catch(error){\n        dispatch({\n            type:ADMIN_PRODUCTS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//create new product\nexport const newProduct = (productData)=>async(dispatch)=>{\n   try{\n       console.log(\"product data\",productData);\n     dispatch({type:NEW_PRODUCT_REQUEST});\n     const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n      }\n     const {data} = await axios.post(\"/products/admin/createProduct\",productData,config);\n     console.log(\"newproductdata\",data);\n     dispatch({type:NEW_PRODUCT_SUCCESS, payload: data})\n   }catch(error){\n      dispatch({type:NEW_PRODUCT_FAIL,payload: error.response.data.errMessage})\n   }\n}\n\n//delete product\nexport const deleteProduct = (id)=>async(dispatch)=>{\n    try{\n      console.log(\"im in delete product action\");\n      console.log(\"deletId\",id);\n      dispatch({type:DELETE_PRODUCT_REQUEST});\n     \n      const {data} = await axios.delete(`/products/admin/deleteProduct/${id}`);\n      console.log(\"newproductdata\",data);\n      dispatch({type:DELETE_PRODUCT_SUCCESS, payload: data.success})\n    }catch(error){\n       dispatch({type:DELETE_PRODUCT_FAIL,payload: error.response.data.errMessage})\n    }\n }\n\n //update product\n export const updateProduct = (id,productData)=>async(dispatch)=>{\n    try{\n        \n      dispatch({type:UPDATE_PRODUCT_REQUEST});\n     \n      const {data} = await axios.put(`/products/admin/updateProduct/${id}`,productData);\n      console.log(\"newproductdata\",data);\n      dispatch({type:UPDATE_PRODUCT_SUCCESS, payload: data.success})\n    }catch(error){\n       dispatch({type:UPDATE_PRODUCT_FAIL,payload: error.response.data.errMessage})\n    }\n }\n\n // Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n        console.log(\"im in review action\");\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/products/reviews?id=${id}`)\n        console.log(\"reviewData\",data);\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/products/review?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//clear error\nexport const clearErrors = ()=>async(dispatch)=>{\n   dispatch({\n       type:CLEAR_ERRORS\n   })\n}","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/userActions.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/userConstants.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/productConstants.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Register.js",["247","248"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport MetaData from '../layouts/MetaData';\nimport {register,clearErrors} from \"../../actions/userActions\";\nconst Register = ({history}) => {\n    const [user,setUser] = useState({\n        name:\"\",\n        email:\"\",\n        password:\"\"\n    })\n    const {name,email,password} = user;\n    const [avatar,setAvatar] = useState(\"\");\n    const [avatarPreview,setAvatarPreview] = useState(\"/images/default_avatar.jpg\");\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {isAuthenticated,loading,error} = useSelector(state=>state.auth);\n    if(isAuthenticated){\n      alert.success(\"user registered successfully\");\n        history.push(\"/\");\n    }\n    useEffect(() => {\n       if(error){\n           alert.error(error);\n           dispatch(clearErrors());\n       }\n    }, [dispatch,alert,isAuthenticated,error,history])\n    const submitHandler = (e)=>{\n     e.preventDefault();\n     const formData = new FormData();\n    \n      formData.set(\"avatar\",avatarPreview);\n     \n    \n     formData.set(\"name\",name);\n     formData.set(\"email\",email);\n     formData.set(\"password\",password);\n   \n     dispatch(register(formData))\n    }\n    const onChange = e =>{\n        if(e.target.name === \"avatar\"){\n          const reader = new FileReader();\n          console.log(\"image\",e.target.files[0])\n          reader.readAsDataURL(e.target.files[0]);\n          reader.onload = ()=>{\n              if(reader.readyState == 2){\n                  setAvatarPreview(reader.result);\n                  setAvatar(reader.result);\n              }\n          }\n        }else{\n            setUser({...user,[e.target.name]:[e.target.value]})\n        }\n    }\n    return (\n      <>\n      <MetaData title={'Register User'}/>\n      <div className=\"row wrapper\">\n\t\t<div className=\"col-10 col-lg-5\">\n        <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n            <h1 className=\"mb-3\">Register</h1>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email_field\">Name</label>\n            <input type=\"name\" id=\"name_field\" className=\"form-control\" name=\"name\" value={name} onChange={onChange} />\n          </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email_field\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n  \n            <div className=\"form-group\">\n              <label htmlFor=\"password_field\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password_field\"\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='avatar_upload'>Avatar</label>\n              <div className='d-flex align-items-center'>\n                  <div>\n                      <figure className='avatar mr-3 item-rtl'>\n                          <img\n                              src={avatarPreview}\n                              className='rounded-circle'\n                              alt='Avatar Preview'\n                          />\n                      </figure>\n                  </div>\n                  <div className='custom-file'>\n                      <input\n                          type='file'\n                          name='avatar'\n                          className='custom-file-input'\n                          id='customFile'\n                          accept=\"images/*\"\n                          onChange={onChange}\n                      />\n                      <label className='custom-file-label' htmlFor='customFile'>\n                          Choose Avatar\n                      </label>\n                  </div>\n              </div>\n          </div>\n  \n            <button\n              id=\"register_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n              disabled={loading?true:false}\n            >\n              REGISTER\n            </button>\n          </form>\n\t\t  </div>\n          </div>\n      </>\n    )\n}\n\nexport default Register\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/Profile.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/route/ProtectedRoute.js",["249"],"import React from 'react'\nimport {Route,Redirect} from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport loader from 'sass-loader';\nconst ProtectedRoute = ({component:Component,...rest}) => {\n    const {isAdmin,isAuthenticated,user,loading} = useSelector(state=>state.auth);\n    console.log(\"im in protected route\");\n    console.log(\"isAuthenticated\",isAuthenticated);\n    \n    console.log(\"loading\",loading);\n    return (\n       <>\n       {loading===false && (<>\n        <Route {...rest} render={\n            props=>{\n                if(isAuthenticated===false){\n                    return <Redirect to=\"/login\"></Redirect>\n                }\n                if(isAdmin===true && user.role!==\n                    \"admin\"){\n                    return <Redirect to=\"/\"></Redirect>\n                }\n                return <Component {...props}/>\n\n            }\n        }></Route>\n       </>)}\n       </>)\n}\n\nexport default ProtectedRoute\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/updateProfile.js",["250","251","252","253"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from 'react-router-dom';\nimport {updateProfile,loadUser,clearErrors} from \"../../actions/userActions\";\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nconst UpdateProfile = ({history}) => {\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [avatar,setAvatar] = useState(\"\");\n    const [avatarPreview,setAvatarPreview] = useState(\"/images/default_avatar.jpg\");\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {user} = useSelector(state=>state.auth);\n    const {isUpdated,loading,error} = useSelector(state=>state.user);\n   \n    useEffect(() => {\n        if(user){\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url);\n        }\n       if(error){\n           alert.error(error);\n           dispatch(clearErrors());\n       }\n       if(isUpdated){\n           alert.success(\"user updated successfully\");\n           dispatch(loadUser());\n           history.push(\"/me\");\n           dispatch({\n               type:UPDATE_PROFILE_RESET\n           })\n       }\n    }, [dispatch,alert,isUpdated,error,history])\n    const submitHandler = (e)=>{\n     e.preventDefault();\n     const formData = new FormData();\n     formData.set(\"name\",name);\n     formData.set(\"email\",email);\n   \n     formData.set(\"avatar\",avatar);\n     dispatch(updateProfile(formData))\n    }\n    const onChange = e =>{\n      \n          const reader = new FileReader();\n          reader.readAsDataURL(e.target.files[0]);\n          reader.onload = ()=>{\n              if(reader.readyState == 2){\n                  setAvatarPreview(reader.result);\n                  setAvatar(reader.result);\n              }\n          }\n        \n    }\n    return (\n       <>\n       <MetaData title={'Update Profile'}></MetaData>\n        <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\tid=\"name_field\" \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e)=>setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                name=\"email\"\n                                className=\"form-control\"\n                              \n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept=\"image/*\"\n                                    onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                      \n                        <button type=\"submit\" disabled={loading?true:false} className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                    </form>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default UpdateProfile\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/UpdatePassword.js",["254","255","256","257"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from 'react-router-dom';\nimport {updatePassword,loadUser,clearErrors} from \"../../actions/userActions\";\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants';\n\nconst UpdatePassword = ({history}) => {\nconst [oldPassword,setOldPassword] = useState('');\nconst [newPassword,setNewPassword] = useState('');\n\nconst alert = useAlert();\nconst dispatch = useDispatch();\nconst {user} = useSelector(state=>state.auth);\nconst {isUpdated,loading,error} = useSelector(state=>state.user);\n\nuseEffect(() => {\n   if(error){\n       alert.error(error);\n       dispatch(clearErrors());\n   }\n   if(isUpdated){\n       alert.success(\"password updated successfully\");\n       \n       history.push(\"/me\");\n       dispatch({\n           type:UPDATE_PASSWORD_RESET\n       })\n   }\n}, [dispatch,alert,isUpdated,error,history])\nconst submitHandler = (e)=>{\n e.preventDefault();\n const formData = new FormData();\n \n formData.set(\"oldPassword\",oldPassword);\n formData.set(\"newPassword\",newPassword);\n\n \n dispatch(updatePassword(formData))\n}\n\n\n    return (\n       <>\n       <MetaData title={'change password'}></MetaData>\n       <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form onSubmit={submitHandler} className=\"shadow-lg\">\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e)=>setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={newPassword}\n                                onChange={(e)=>setNewPassword(e.target.value)}\n                            />\n                             </div>\n\n<button type=\"submit\" disabled={loading?true:false}className=\"btn update-btn btn-block mt-4 mb-3\">Update Password</button>\n</form>\n</div>\n</div>\n       </>\n    )\n}\n\nexport default UpdatePassword\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/ForgotPassword.js",["258"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\n\nimport MetaData from '../layouts/MetaData';\n\nimport {forgotPassword,loadUser,clearErrors} from \"../../actions/userActions\";\nconst ForgotPassword = () => {\nconst [email,setEmail] = useState('');\nconst alert = useAlert();\nconst dispatch = useDispatch();\nconst {message,error,loading} = useSelector(state=>state.forgotPassword);\nuseEffect(() => {\n   if(error){\n       alert.error(error);\n       dispatch(clearErrors());\n   }\n   if(message){\n       alert.success(message);\n    }\n}, [dispatch,alert,error,message])\nconst submitHandler = (e)=>{\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"email\",email);\n    dispatch(forgotPassword(formData))\n   }\n    return (\n       <>\n       <MetaData title={'Forgot Password'}></MetaData>\n       <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            disabled={loading?true:false}\n                            className=\"btn btn-block py-3\">\n                           \n                            Send Email\n                    </button>\n                    </form>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default ForgotPassword\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/user/NewPassword.js",["259"],"import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\n\nimport MetaData from '../layouts/MetaData';\n\nimport {resetPassword,loadUser,clearErrors} from \"../../actions/userActions\";\n\nconst NewPassword = ({history,match}) => {\nconst [password,setPassword] = useState('');\nconst [confirmpassword,setConfirmPassword] = useState('');\nconst alert = useAlert();\nconst dispatch = useDispatch();\nconst {error,success} = useSelector(state=>state.forgotPassword);\nuseEffect(() => {\n   if(error){\n       alert.error(error);\n       dispatch(clearErrors());\n   }\n   if(success){\n       alert.success(\"password updated successfully\");\n       history.push(\"/login\");\n    }\n}, [dispatch,alert,error,success,history])\nconst submitHandler = (e)=>{\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"password\",password);\n    formData.set(\"confirmpassword\",confirmpassword);\n    dispatch(resetPassword(match.params.token,formData))\n   }\n    return (\n        <>\n        <MetaData title={'Reset Password'}></MetaData>\n        <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">New Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange={(e)=>setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={confirmpassword}\n                            onChange={(e)=>setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        id=\"new_password_button\"\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\">\n                        Set Password\n                    </button>\n\n                </form>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default NewPassword\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/cartReducers.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/cartConstants.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/cartActions.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Cart.js",["260"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemsCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n    const increaseQty = (id,quantity,stock)=>{\n        const newQty = quantity+1;\n        console.log(\"stock\",stock)\n        if(newQty>stock)\n        return\n       dispatch(addItemsCart(id,newQty));\n    }\n\n    const decreaseQty = (id,quantity,stock)=>{\n        const newQty = quantity - 1;\n        console.log(\"stock\",stock)\n        if(newQty<1)\n        return\n       dispatch(addItemsCart(id,newQty));\n    }\n\n    const removeCartHandler = (id) =>{\n        dispatch(removeItemFromCart(id));\n    }\n    const checkoutHandler = ()=>{\n        history.push(\"/login?redirect=shipping\")\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                            <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={()=>decreaseQty(item.product,item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n                                                    <span className=\"btn btn-primary plus\" onClick={()=>increaseQty(item.product,item.quantity,item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={()=>removeCartHandler(item.product)}  ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </>\n                            ))}\n                             </div>\n\n<div className=\"col-12 col-lg-3 my-4\">\n    <div id=\"order_summary\">\n        <h4>Order Summary</h4>\n        <hr />\n        <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n        <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n        <hr />\n        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n    </div>\n</div>\n</div>\n</>\n )}\n </Fragment>\n)\n}\n\nexport default Cart","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Shipping.js",["261","262"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { countries } from 'countries-list'\nimport MetaData from '../layouts/MetaData';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingInfo } from '../../actions/cartActions'\nimport CheckoutSteps from \"./checkoutSteps\";\nconst Shipping = ({history}) => {\n    const countriesList = Object.values(countries);\n    const {ShippingInfo} = useSelector(state=>state.cart);\n    const [address,setAddress] = useState(ShippingInfo.address);\n    const [city,setCity] = useState(ShippingInfo.city);\n    const [postalCode,setPostalCode]= useState(ShippingInfo.postalCode);\n    const [phoneNo,setPhoneNo] = useState(ShippingInfo.phoneNo);\n    const [country,setCountry] = useState(ShippingInfo.country);\n    const dispatch = useDispatch();\n    const submitHandler = (e)=>{\n        e.preventDefault();\n        dispatch(saveShippingInfo({address,city,phoneNo,postalCode,country}))\n        history.push(\"/confirm\")\n    }\n    return (\n       <>\n       <MetaData title={'Shipping Info'}></MetaData>\n       <CheckoutSteps shipping></CheckoutSteps>\n       <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e)=>setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e)=>setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e)=>setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e)=>setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e)=>setCountry(e.target.value)}\n                                required\n                            >\n                                  {countriesList.map(country => (\n                                    <option key={country.name} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))}\n                               \n                                \n                                 \n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default Shipping\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/checkoutSteps.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/ConfirmOrder.js",["263","264","265"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useSelector } from 'react-redux'\n\nimport CheckoutSteps from \"./checkoutSteps\";\n\nconst ConfirmOrder = ({history}) => {\n  \n    const {cartItems,ShippingInfo} = useSelector(state=>state.cart);\n    const {user} = useSelector(state=>state.auth);\n    const itemPrice = cartItems.reduce((acc,item)=>acc+item.price*item.quantity,0)\n    const shippingPrice = itemPrice>200?0:25;\n    const taxPrice = Number((0.05*itemPrice).toFixed(2));\n    const totalPrice = (shippingPrice+taxPrice+itemPrice).toFixed(2);\n    const proceedToPayment = ()=>{\n        console.log(\"im in proceed to payment\")\n        const data = {\n            itemPrice:itemPrice.toFixed(2),\n            shippingPrice,\n            taxPrice,\n            totalPrice\n        }\n        sessionStorage.setItem('orderInfo',JSON.stringify(data));\n        history.push(\"/payment\");\n    }\n    return (\n        <>\n       <MetaData title={'Shipping Info'}></MetaData>\n       <CheckoutSteps shipping confirmOrder></CheckoutSteps>\n       <div className=\"row d-flex justify-content-between\">\n            <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                <h4 className=\"mb-3\">Shipping Info</h4>\n                <p><b>Name:</b> {user && user.name}</p>\n                <p><b>Phone:</b> {ShippingInfo.phoneNo}</p>\n                <p className=\"mb-4\"><b>Address:</b>{`${ShippingInfo.address}`,`${ShippingInfo.city}`,`${ShippingInfo.postalCode}`,`${ShippingInfo.country}`}</p>\n                \n                <hr />\n                <h4 className=\"mt-4\">Your Cart Items:</h4>\n                {cartItems.map(item=>(\n                    <>\n                    \n\n<hr />\n<div className=\"cart-item my-1\" key={item.product}>\n    <div className=\"row\">\n        <div className=\"col-4 col-lg-2\">\n            <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\"/>\n        </div>\n\n        <div className=\"col-5 col-lg-6\">\n            <Link to={`/product/${item.product}`}>{item.name}</Link>\n        </div>\n        <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n            <p>{item.quantity} x ${item.price}= <b>${(item.quantity*item.price).toFixed(2)}</b></p>\n        </div>\n\n    </div>\n</div>\n<hr />\n                    </>\n                ))}\n               \n               \n\n            </div>\n\t\t\t\n\t\t\t<div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n<hr />\n<button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={proceedToPayment}>Proceed to Payment</button>\n</div>\n</div>\n\n\n</div>\n\n       </>\n    )\n}\n\nexport default ConfirmOrder\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/Payment.js",["266","267","268","269"],"import React, { useState,useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from \"./checkoutSteps\";\nimport { createOrder,clearErrors } from '../../actions/orderActions';\nimport { useStripe,useElements,CardNumberElement,CardExpiryElement,CardCvcElement } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px'\n        },\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\nconst Payment = ({history}) => {\n \n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n    const {user} = useSelector(state=>state.auth);\n    const {cartItems,ShippingInfo} = useSelector(state=>state.cart);\n    const {error} = useSelector(state=>state.order);\n    const order = {\n      orderItems:cartItems,\n      ShippingInfo\n    }\nconst orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"))\nconsole.log(\"orderInfo\",orderInfo);\nif(orderInfo){\n  order.itemsPrice = orderInfo.itemPrice\n  order.shippingPrice = orderInfo.shippingPrice\n  order.taxPrice = orderInfo.taxPrice\n  order.totalPrice = orderInfo.totalPrice\n}\nconst paymentData = {\n    amount : Math.round(orderInfo.totalPrice*100)\n}\nuseEffect(() => {\n  console.log(\"im in payment component\");\n  if(error){\n    alert.error(error)\n    dispatch(clearErrors());\n  }\n}, [dispatch,error,error])\nconst submitHandler = async(e) => {\n  e.preventDefault();\n  console.log(\"amount\",Math.round(orderInfo.totalPrice*100));\n  console.log(\"orderInfo\",orderInfo);\n  console.log(\"paymentData\",paymentData)\n  console.log(\"im in submit handler\");\n  document.querySelector(\"#pay_btn\").disabled = true;\n  let res;\n  const config = {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}\n  // res = await axios.post('/api/v1/payment/process', paymentData, config)\n  res = await axios.post(\"/user/payment\",paymentData,config);\n  console.log(\"res\",res);\n  const clientSecret = res.data.client_secret;\n  if (!stripe || !elements) {\n    return;\n}\nconst result = await stripe.confirmCardPayment(clientSecret,{\n  payment_method:{\n    card:elements.getElement(CardNumberElement),\n    billing_details:{\n      name:user.name,\n      email:user.email\n    }\n  }\n})\nconsole.log(\"paymentIntent\",result.paymentIntent);\nif(result.error){\n  console.log(\"im in result errpr\");\n  alert.error(result.error.message);\n  document.querySelector(\"#pay_btn\").disabled = false;\n}else{\n  if(result.paymentIntent.status==\"succeeded\"){\n    order.paymentInfo = {\n      id:result.paymentIntent.id,\n      status:result.paymentIntent.status\n    }\n    dispatch(createOrder(order))\n    history.push(\"/success\")\n  }else{\n    alert.error(\"there is some issue while payment processing\");\n  }\n}\nconsole.log(clientSecret);\n  try{\n\n  }catch(error){\n    document.querySelector(\"#pay_btn\").disabled = false;\n    alert.error(error.response.data.message);\n  }\n}\n    return (\n        <>\n          <MetaData title={'Payment'} />\n       <CheckoutSteps shipping confirmOrder payment></CheckoutSteps>\n       <div className=\"row wrapper\">\n\t\t<div className=\"col-10 col-lg-5\">\n        <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                <h1 className=\"mb-4\">Card Info</h1>\n                <div className=\"form-group\">\n                  <label htmlFor=\"card_num_field\">Card Number</label>\n                  <CardNumberElement\n                    type=\"text\"\n                    id=\"card_num_field\"\n                    className=\"form-control\"\n                    options={options}\n                  />\n                </div>\n\t\t\t\t\n\t\t\t\t<div className=\"form-group\">\n                  <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                  <CardExpiryElement\n                    type=\"text\"\n                    id=\"card_exp_field\"\n                    className=\"form-control\"\n                    options={options}/>\n                </div>\n\t\t\t\t\n\t\t\t\t<div className=\"form-group\">\n                  <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                  <CardCvcElement\n                    type=\"text\"\n                    id=\"card_cvc_field\"\n                    className=\"form-control\"\n                    options={options}\n                  />\n                </div>\n      \n            \n                <button\n                  id=\"pay_btn\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3\"\n                >\n                  Pay {`-${orderInfo && orderInfo.totalPrice}`}\n                </button>\n    \n              </form>\n\t\t\t  </div>\n        </div>\n        </>\n    )\n}\n\nexport default Payment\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/reducers/orderReducers.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/actions/orderActions.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/cart/OrderSuccess.js",["270","271"],"import React,{useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport MetaData from '../layouts/MetaData';\nimport {REMOVE_ALL_ITEMS} from '../../constants/cartConstants';\nimport { useDispatch,useSelector } from 'react-redux';\nconst OrderSuccess = () => {\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        localStorage.removeItem(\"cartItems\");\n        dispatch({ type: REMOVE_ALL_ITEMS })\n    },[])\n    return (\n        <>\n        <MetaData title={'Order Success'}></MetaData>\n        <div className=\"row justify-content-center\">\n        <div className=\"col-6 mt-5 text-center\">\n            <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n            <h2>Your Order has been placed successfully.</h2>\n\n            <Link to=\"/orders/me\">Go to Orders</Link>\n        </div>\n\n    </div>\n    </>\n    )\n}\n\nexport default OrderSuccess\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/order/ListOrders.js",["272"],"import React,{useState,useEffect} from 'react'\nimport { MDBDataTable } from 'mdbreact'\n// import { MDBDataTable } from 'mdbreact';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { myOrders,clearErrors } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nconst ListOrders = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,orders} = useSelector(state=>state.myOrders)\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n       dispatch(myOrders())\n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n       console.log(\"im in list orders\");\n    }, [error,alert,dispatch])\n    \n    const setOrders = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'Order ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Number Of Items',\n                  field:'numOfItems',\n                  sort:'asc'\n              },{\n                label:'Amount',\n                field:'amount',\n                sort:'asc'\n            },\n            {\n                label:'Status',\n                field:'status',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                sort:'asc'\n            }\n          ],\n          rows:[\n\n          ]\n        }\n        orders.forEach(order=>{\n            data.rows.push({\n                id:order._id,\n                numOfItems:order.orderItems.length,\n                amount:`$${order.totalPrice}`,\n                status:order.orderStatus && String(order.orderStatus).includes(\"Delivered\")?\n                <p style={{color:\"green\"}}>{order.orderStatus}</p>:\n                <p style={{color:\"red\"}}>{order.orderStatus}</p>,\n                actions:<Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n            })\n        })\n        return data;\n    }\n    return (\n        <>\n       <MetaData title={'My Orders'}></MetaData>\n       <h1 className=\"mt-5\">My Orders</h1>\n       {loading?<Loader/>:\n        <MDBDataTable\n        data={setOrders()}\n        className=\"px-3\"\n        bordered\n        striped\n        hover\n    />\n       \n       }\n       </>\n    )\n}\n\nexport default ListOrders\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/order/Order_Details.js",["273","274","275","276"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { orderDetails,clearErrors } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\n\nconst Order_Details = ({match}) => {\n    console.log(\"im in oreder details\");\n    const {error,loading,order={}} = useSelector(state=>state.orderDetails);\n    console.log(\"order\",order);\n    const {ShippingInfo,orderItems,paymentInfo,user,totalPrice,orderStatus} = order;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n       dispatch(orderDetails(match.params.id))\n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n       console.log(\"im in list orders\");\n    }, [error,alert,dispatch,match.params.id])\n    const shippingDetails = ShippingInfo && `${ShippingInfo.address},${ShippingInfo.city},${ShippingInfo.postalCode},${ShippingInfo.country}`;\n    const isPaid = paymentInfo && paymentInfo.status==\"succeeded\" ? true : false;\n    return (\n       <>\n       <MetaData title={'Order Details'}></MetaData>\n       {loading?<Loader/>:(\n           <>\n           <div className=\"row d-flex justify-content-between\">\n                    <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n                        <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                        <h4 className=\"mb-4\">Shipping Info</h4>\n                        <p><b>Name:</b> {user && user.name}</p>\n                        <p><b>Phone:</b> {ShippingInfo && ShippingInfo.phoneNo}</p>\n                        <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                        <p><b>Amount:</b> {totalPrice}</p>\n\n                        <hr />\n\n                        <h4 className=\"my-4\">Payment</h4>\n                        <p className={isPaid?\"greenColor\":\"redColor\"}><b>{isPaid?\"PAID\":\"NOT PAID\"}</b></p>\n\n\n                        <h4 className=\"my-4\">Order Status:</h4>\n                        <p className={orderStatus && String(orderStatus).includes(\"Delivered\")?\"greenColor\":\"redColor\"} ><b>{order.orderStatus}</b></p>\n\n\n                        <h4 className=\"my-4\">Order Items:</h4>\n\n                        <hr />\n                        <div className=\"cart-item my-1\">\n                            {orderItems && orderItems.map(item=>\n                                (\n                                    <>\n <div className=\"row my-5\" key={item.product}>\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                        </div>\n\n                                        <div className=\"col-5 col-lg-5\">\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                        </div>\n\n\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                            <p>${item.price}</p>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} Piece(s)</p>\n                                        </div>\n                                    </div>\n                                    </>\n                                ))}\n                                   \n                        </div>\n                        <hr />\n                    </div>\n                </div>\n        \n           </>\n       )}\n       </>\n    )\n}\n\nexport default Order_Details\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/Dashboard.js",["277","278","279"],"import React,{useEffect,useState} from 'react'\nimport Sidebar from './Sidebar';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from \"react-router-dom\";\nimport { getAdminProducts,clearErrors } from '../../actions/productActions';\nimport { getAllUsers } from '../../actions/userActions';\nimport {getAllOrders} from \"../../actions/orderActions\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport \"../../App.css\";\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    const {products} = useSelector(state=>state.products);\n    const { users } = useSelector(state => state.allUsers)\n    const {orders,loading,amount} = useSelector(state=>state.allOrder);\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(getAllOrders());\n        dispatch(getAllUsers());\n    }, [dispatch])\n    let outOfStock = 0;\n    products.forEach(product=>{\n      if(product.stock==0){\n          outOfStock+=1;\n      }\n    })\n    return (\n      \n        <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n        <div className=\"col-12 col-md-10\">\n                    <h1 className=\"my-4\">Dashboard</h1>\n                    {loading?<Loader/>:(\n                        <>\n                        <MetaData title={'Admin Dashboard'}></MetaData>\n                        <div className=\"row pr-4\">\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${amount}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                            <i className=\"fa fa-angle-right\"></i>\n                                                </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                            \n                </div>\n            </div>\n       \n    )\n}\n\nexport default Dashboard\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/Sidebar.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProductList.js",["280","281"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getAdminProducts,clearErrors,deleteProduct } from '../../actions/productActions';\nimport { MDBDataTable } from 'mdbreact'\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants';\nconst ProductList = ({history}) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,products} = useSelector(state=>state.products)\n    const {error:deleteError,isDeleted} = useSelector(state=>state.deleteProduct)\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n       dispatch(getAdminProducts())\n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n     if(deleteError){\n       alert.error(deleteError);\n       dispatch(clearErrors());\n     }\n     if(isDeleted){\n      alert.success(\"Product Deleted Successfully\");\n      dispatch({type:DELETE_PRODUCT_RESET});\n      history.push(\"/admin/products\");\n     }\n       console.log(\"im in list orders\");\n    }, [error,alert,dispatch,deleteError,history,isDeleted])\n    \n    const setProducts = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Name',\n                  field:'name',\n                  sort:'asc'\n              },{\n                label:'Price',\n                field:'price',\n                sort:'asc'\n            },\n            {\n                label:'Stock',\n                field:'stock',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                \n            }\n          ],\n          rows:[\n\n          ]\n        }\n        products.forEach(product=>{\n            data.rows.push({\n                id:product._id,\n                name:product.name,\n                price:`$${product.price}`,\n                stock:product.stock,\n                status:product.productStatus && String(product.productStatus).includes(\"Delivered\")?\n                <p style={{color:\"green\"}}>{product.productStatus}</p>:\n                <p style={{color:\"red\"}}>{product.productStatus}</p>,\n                actions:<><Link to={`/admin/product/${product._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button onClick={()=>deleteProductHandler(product._id)} className=\"btn btn-danger py-1 px-2 ml-2\">\n                <i className=\"fa fa-trash\"></i>    \n                </button></>\n            })\n        })\n        return data;\n    }\n    const deleteProductHandler=(id)=>{\n        console.log(\"im in delete product handler\");\n        console.log(\"id\",id);\n       dispatch(deleteProduct(id));\n    }\n    return (\n       <>\n       <MetaData title={\"All Products\"}></MetaData>\n       <div className=\"row\">\n         <div className=\"col-12 col-md-2\">\n             <Sidebar/>\n         </div>\n         <div className=\"col-12 col-md-10\">\n               <>\n               <h1 className=\"my-5\">All Products</h1>\n               {loading?<Loader/>:<>\n                <MDBDataTable\n        data={setProducts()}\n        className=\"px-3\"\n        bordered\n        striped\n        hover\n    />\n               </>}\n               </>\n         </div>\n       </div>\n       </>\n    )\n}\n\nexport default ProductList\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/NewProduct.js",["282","283"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { newProduct,clearErrors } from '../../actions/productActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\nconst NewProduct = ({history}) => {\n    const [name,setName] = useState(\"\");\n    const [price,setPrice] = useState(0);\n    const [description,setDescription] = useState(\"\");\n    const [category,setCategory] = useState(\"\");\n    const [stock,setStock] = useState(0);\n    const [seller,setSeller] = useState(\"\");\n    const [images,setImages] = useState([]);\n    const [imagesPreview,setImagesPreview] = useState([]);\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"outdoor\",\n        \"Home\"\n    ]\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,success} = useSelector(state=>state.newProduct)\n    useEffect(() => {\n       \n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n    if(success){\n      history.push(\"/admin/products\");\n      alert.success(\"Product Created Successfully\");\n      dispatch({type:NEW_PRODUCT_RESET})\n    }\n       console.log(\"im in list orders\");\n    }, [error,alert,success,history,dispatch])\n    const submitHandler = (e)=>{\n        console.log(\"im in submit handler\");\n        e.preventDefault();\n        const formData = new FormData();\n        formData.set(\"name\",name);\n        formData.set(\"price\",price);\n        formData.set(\"description\",description);\n        formData.set(\"category\",category);\n        formData.set(\"stock\",stock);\n        formData.set(\"seller\",seller);\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n        console.log(\"formData\",formData);\n        dispatch(newProduct(formData))\n       }\n       const onChange = e =>{\n        const files = Array.from(e.target.files);\n        setImagesPreview([]);\n        setImages([]);\n        files.forEach(file=>{\n            const reader = new FileReader();\n            reader.onload = ()=>{\n                if(reader.readyState === 2){\n                  console.log(\"reader\",reader.result);\n                    setImagesPreview(oldArray=>[...oldArray,reader.result]);\n                    setImages(oldArray=>[...oldArray,reader.result]);\n                }\n            }\n            reader.readAsDataURL(file);\n        })\n           \n        }\n    return (\n        <>\n        <MetaData title={\"New Product\"}></MetaData>\n       <div className=\"row\">\n         <div className=\"col-12 col-md-2\">\n             <Sidebar/>\n         </div>\n         <div className=\"col-12 col-md-10\">\n               <>\n               <div className=\"wrapper my-5\"> \n        <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n            <h1 className=\"mb-4\">New Product</h1>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"name_field\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name_field\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e)=>setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"price_field\">Price</label>\n                <input\n                  type=\"text\"\n                  id=\"price_field\"\n                  className=\"form-control\"\n                  value={price}\n                  onChange={(e)=>setPrice(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e)=>setDescription(e.target.value)}></textarea>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category_field\">Category</label>\n                <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e)=>setCategory(e.target.value)}>\n                {categories.map(category=>(\n                    <option key={category} value={category}>{category}</option>\n                ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"stock_field\">Stock</label>\n                <input\n                  type=\"number\"\n                  id=\"stock_field\"\n                  className=\"form-control\"\n                  value={stock}\n                  onChange={(e)=>setStock(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"seller_field\">Seller Name</label>\n                <input\n                  type=\"text\"\n                  id=\"seller_field\"\n                  className=\"form-control\"\n                  value={seller}\n                  onChange={(e)=>setSeller(e.target.value)}\n                />\n              </div>\n              \n              <div className='form-group'>\n                <label>Images</label>\n                \n                    <div className='custom-file'>\n                        <input\n                            type='file'\n                            name='product_images'\n                            className='custom-file-input'\n                            id='customFile'\n                            onChange={onChange}\n                            multiple\n                        />\n                        <label className='custom-file-label' htmlFor='customFile'>\n                            Choose Images\n                        </label>\n                    </div>\n                    {imagesPreview.map(img=>(\n                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\"/>\n                    ))}\n            </div>\n\n  \n            <button\n              id=\"login_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n              disabled={loading?true:false}\n            >\n              CREATE\n            </button>\n\n          </form>\n    </div>\n               \n               </>\n         </div>\n       </div>\n       </>\n    )\n}\n\nexport default NewProduct\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UpdateProduct.js",["284","285","286"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { updateProduct,clearErrors,getProductDetails } from '../../actions/productActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\nconst UpdateProduct = ({match,history}) => {\n    const [name,setName] = useState(\"\");\n    const [price,setPrice] = useState(0);\n    const [description,setDescription] = useState(\"\");\n    const [category,setCategory] = useState(\"\");\n    const [stock,setStock] = useState(0);\n    const [seller,setSeller] = useState(\"\");\n    const [images,setImages] = useState([]);\n    const [oldImages,setOldImages] = useState([]);\n    const [imagesPreview,setImagesPreview] = useState([]);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {error,product} = useSelector(state=>state.productDetails)\n  \n    const {loading,error:updateError,isUpdated} = useSelector(state=>state.deleteProduct);\n    const productId = match.params.id;\n    // const productId = match.params.id;\n \n   \n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"outdoor\",\n        \"Home\"\n    ]\n    useEffect(() => {\n        if(product && product._id!==productId){\n            console.log(product._id,productId);\n            console.log(\"im here\");\n\n            dispatch(getProductDetails(productId));\n        }else{\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock);\n            setOldImages(product.images);\n        }\n        if(error){\n         alert.error(error);\n         dispatch(clearErrors());\n     }\n     if(updateError){\n        alert.error(updateError);\n        dispatch(clearErrors());\n     }\n     if(isUpdated){\n       history.push(\"/admin/products\");\n       alert.success(\"Product Updated Successfully\");\n       dispatch({type:UPDATE_PRODUCT_RESET})\n     }\n\n        console.log(\"im in list orders\");\n     }, [error,alert,isUpdated,history,dispatch,product,productId])\n     const submitHandler = (e)=>{\n        console.log(\"im in submit handler\");\n        console.log(\"seller\",seller);\n        e.preventDefault();\n         const formData = new FormData();\n        formData.set(\"name\",name);\n        formData.set(\"price\",price);\n        formData.set(\"description\",description);\n        formData.set(\"category\",category);\n        formData.set(\"stock\",stock);\n        formData.set(\"seller\",seller);\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n        console.log(\"formData\",formData);\n        console.log(\"id\",product._id)\n        dispatch(updateProduct(product._id,formData))\n       }\n       const onChange = e =>{\n        const files = Array.from(e.target.files);\n        setImagesPreview([]);\n        setImages([]);\n        setOldImages([]);\n        files.forEach(file=>{\n            const reader = new FileReader();\n            reader.onload = ()=>{\n                if(reader.readyState === 2){\n                    console.log(\"reader\",reader.result);\n                    setImagesPreview(oldArray=>[...oldArray,reader.result]);\n                    setImages(oldArray=>[...oldArray,reader.result]);\n                }\n            }\n            reader.readAsDataURL(file);\n        })\n    }\n    return (\n       <>\n        <MetaData title={\"Update Product\"}></MetaData>\n       <div className=\"row\">\n         <div className=\"col-12 col-md-2\">\n             <Sidebar/>\n         </div>\n         <div className=\"col-12 col-md-10\">\n               <>\n               <div className=\"wrapper my-5\"> \n        <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n            <h1 className=\"mb-4\">Update Product</h1>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"name_field\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name_field\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e)=>setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"price_field\">Price</label>\n                <input\n                  type=\"text\"\n                  id=\"price_field\"\n                  className=\"form-control\"\n                  value={price}\n                  onChange={(e)=>setPrice(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e)=>setDescription(e.target.value)}></textarea>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category_field\">Category</label>\n                <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e)=>setCategory(e.target.value)}>\n                {categories.map(category=>(\n                    <option key={category} value={category}>{category}</option>\n                ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"stock_field\">Stock</label>\n                <input\n                  type=\"number\"\n                  id=\"stock_field\"\n                  className=\"form-control\"\n                  value={stock}\n                  onChange={(e)=>setStock(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"seller_field\">Seller Name</label>\n                <input\n                  type=\"text\"\n                  id=\"seller_field\"\n                  className=\"form-control\"\n                  value={seller}\n                  onChange={(e)=>setSeller(e.target.value)}\n                />\n              </div>\n              \n              <div className='form-group'>\n                <label>Images</label>\n                \n                    <div className='custom-file'>\n                        <input\n                            type='file'\n                            name='product_images'\n                            className='custom-file-input'\n                            id='customFile'\n                            onChange={onChange}\n                            multiple\n                        />\n                        <label className='custom-file-label' htmlFor='customFile'>\n                            Choose Images\n                        </label>\n                    </div>\n                    \n                    {oldImages && oldImages.map(img=>(\n                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\"/>\n                    ))}\n\n                    {imagesPreview.map(img=>(\n                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\"/>\n                    ))}\n            </div>\n\n  \n            <button\n              id=\"login_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n              disabled={loading?true:false}\n            >\n              UPDATE\n            </button>\n\n          </form>\n    </div>\n               \n               </>\n         </div>\n       </div>\n       </>\n    )\n}\n\nexport default UpdateProduct\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/OrderList.js",["287"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getAllOrders,clearErrors,deleteOrder } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { MDBDataTable } from 'mdbreact'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants';\n\nconst OrderList = ({history}) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,orders} = useSelector(state=>state.allOrder)\n \n    const { isDeleted } = useSelector(state => state.updateOrder)\n  \n    useEffect(() => {\n        console.log(\"im in useEffect\");\n       dispatch(getAllOrders())\n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n    console.log(\"isDeleted\",isDeleted);\n    if (isDeleted) {\n       \n        alert.success('Order deleted successfully');\n        history.push('/admin/orders');\n        dispatch({ type: DELETE_ORDER_RESET })\n    }\n}, [error,alert,dispatch,isDeleted,history])\nconst deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id))\n}\n    const setOrders = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'order ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Num of Items',\n                  field:'numOfItems',\n                  sort:'asc'\n              },{\n                label:'Amount',\n                field:'amount',\n                sort:'asc'\n            },\n            {\n                label:'Status',\n                field:'status',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                \n            }\n          ],\n          rows:[\n\n          ]\n        }\n        orders.forEach(order=>{\n            data.rows.push({\n                id:order._id,\n                numOfItems:order.orderItems.length,\n                amount:`$${order.totalPrice}`,\n               \n                status:order.orderStatus && String(order.orderStatus).includes(\"Delivered\")?\n                <p style={{color:\"green\"}}>{order.orderStatus}</p>:\n                <p style={{color:\"red\"}}>{order.orderStatus}</p>,\n                actions:<><Link to={`/admin/order/${order._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n                <button onClick={() => deleteOrderHandler(order._id)} className=\"btn btn-danger py-1 px-2 ml-2\">\n                <i className=\"fa fa-trash\"></i>    \n                </button></>\n            })\n        })\n        return data;\n    }\n    // const deleteProductHandler=(id)=>{\n    //    dispatch(deleteProduct(id));\n    // }\n    return (\n        <>\n        <MetaData title={\"All Orders\"}></MetaData>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-2\">\n              <Sidebar/>\n          </div>\n          <div className=\"col-12 col-md-10\">\n                <>\n                <h1 className=\"my-5\">All Orders</h1>\n                {loading?<Loader/>:<>\n                 <MDBDataTable\n         data={setOrders()}\n         className=\"px-3\"\n         bordered\n         striped\n         hover\n     />\n                </>}\n                </>\n          </div>\n        </div>\n        </>\n    )\n}\n\nexport default OrderList\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProcessOrder.js",["288"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { updateOrder,orderDetails,clearErrors } from '../../actions/orderActions';\n\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\n\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants';\n\n\nconst ProcessOrder = ({match}) => {\n    const [status,setStatus] = useState(\"\")\n   const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,order={}} = useSelector(state=>state.orderDetails)\n  const {ShippingInfo,orderItems,paymentInfo,User,totalPrice,orderStatus} = order;\n   const {error,isUpdated} = useSelector(state=>state.updateOrder)\n   const orderId = match.params.id;\n   \n useEffect(() => {\n      dispatch(orderDetails(orderId));\n      \n        if(error){\n         alert.error(error);\n         dispatch(clearErrors());\n     }\n   \n     if(isUpdated){\n       alert.success(\"Order Updated Successfully\");\n       dispatch({type:UPDATE_ORDER_RESET})\n     }\n\n        console.log(\"im in list orders\");\n     }, [dispatch, alert, error, isUpdated, orderId])\n     const updateOrderHandler = (id)=>{\n        const formData = new FormData();\n        formData.set(\"status\",status);\n      \n        console.log(\"formData\",formData);\n        console.log(\"id\",id)\n        dispatch(updateOrder(id,formData))\n       }\n      \n    const shippingDetails = ShippingInfo && `${ShippingInfo.address},${ShippingInfo.city},${ShippingInfo.postalCode},${ShippingInfo.country}`;\n    const isPaid = paymentInfo && paymentInfo.status=='succeeded'?true:false;\n    return (\n        <>\n        <MetaData title={`Process Order # ${order._id}`}></MetaData>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-2\">\n              <Sidebar/>\n          </div>\n          <div className=\"col-12 col-md-10\">\n                <>\n                <h1 className=\"my-5\">All Orders</h1>\n              {loading?<Loader/>:(\n                  <>\n                  <div className=\"row d-flex justify-content-around\">\n                    <div className=\"col-12 col-lg-7 order-details\">\n\n                        <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                        <h4 className=\"mb-4\">Shipping Info</h4>\n                        <p><b>Name:</b> {User && User.name}</p>\n                        <p><b>Phone:</b> {ShippingInfo && ShippingInfo.phoneNo}</p>\n                        <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                        <p><b>Amount:</b> ${totalPrice}</p>\n\n                        <hr />\n\n                        <h4 className=\"my-4\">Payment</h4>\n                        <p className={isPaid?\"greenColor\":\"redColor\"}><b>{isPaid?\"PAID\":\"NOT PAID\"}</b></p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h4 className=\"my-4\">Stripe ID</h4>\n                        <p className=\"greenColor\" ><b>{paymentInfo && paymentInfo.id}</b></p>\n\n\n                        <h4 className=\"my-4\">Order Status:</h4>\n                        <p className={order.orderStatus && String(order.orderStatus).includes(\"Delivered\")?\"greenColor\":\"redColor\"}  ><b>{orderStatus}</b></p>\n\n\n                        <h4 className=\"my-4\">Order Items:</h4>\n\n                        <hr />\n                        <div className=\"cart-item my-1\">\n                            {orderItems && orderItems.map(item=>(\n                                 <div className=\"row my-5\">\n                                 <div className=\"col-4 col-lg-2\">\n                                     <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                 </div>\n\n                                 <div className=\"col-5 col-lg-5\">\n                                     <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                 </div>\n\n\n                                 <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                     <p>{item.price}</p>\n                                 </div>\n\n                                 <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                     <p>{item.quantity} Piece(s)</p>\n                                 </div>\n                             </div>\n                            ))}\n                                  \n                        </div>\n                        <hr />\n                    </div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name='status'\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n\n                                    <button className=\"btn btn-primary btn-block\" onClick={()=>updateOrderHandler(order._id)}>\n                                        Update Status\n                                </button>\n                                </div>\n\t\t\t\t\t\n                </div>\n                  </>\n              )}\n                </>\n          </div>\n        </div>\n        </>\n    )\n}\n\nexport default ProcessOrder\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/constants/orderConstants.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UsersList.js",["289"],"import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getAllUsers,clearErrors,deleteUser } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { MDBDataTable } from 'mdbreact'\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nconst UsersList = ({history}) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,users} = useSelector(state=>state.allUsers)\n    const { isDeleted } = useSelector(state => state.user)\n    console.log(\"final deleted\",isDeleted);\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n        dispatch(getAllUsers())\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n    if (isDeleted) {\n        alert.success('User deleted successfully');\n        history.push('/admin/users');\n        dispatch({ type: DELETE_USER_RESET })\n    }\n}, [error,alert,dispatch,isDeleted,history])\nconst deleteUserHandler = (id) => {\n    dispatch(deleteUser(id))\n}\n    const setUsers = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'user ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Name',\n                  field:'name',\n                  sort:'asc'\n              },{\n                label:'Email',\n                field:'email',\n                sort:'asc'\n            },\n            {\n                label:'Role',\n                field:'role',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                \n            }\n          ],\n          rows:[\n\n          ]\n        }\n        users.forEach(user=>{\n            data.rows.push({\n                id:user._id,\n                name:user.name,\n                email:user.email,\n                role:user.role,\n                actions:<><Link to={`/admin/user/${user._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button onClick={() => deleteUserHandler(user._id)} className=\"btn btn-danger py-1 px-2 ml-2\">\n                <i className=\"fa fa-trash\"></i>    \n                </button></>\n            })\n        })\n        return data;\n    }\n    return (\n        <>\n        <MetaData title={'All Users'} />\n        <div className=\"row\">\n            <div className=\"col-12 col-md-2\">\n                <Sidebar />\n            </div>\n\n            <div className=\"col-12 col-md-10\">\n                <>\n                    <h1 className=\"my-5\">All Users</h1>\n\n                    {loading ? <Loader /> : (\n                        <MDBDataTable\n                            data={setUsers()}\n                            className=\"px-3\"\n                            bordered\n                            striped\n                            hover\n                        />\n                    )}\n\n                </>\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nexport default UsersList\n","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/UpdateUser.js",[],"/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/admin/ProductReview.js",["290"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/loader';\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n     console.log(\"reviews\",reviews);\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId,isDeleted,deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log(\"im in submit handler\");\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            console.log(review);\n            console.log(review.rating);\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews","/home/sunbeam/Guvi/React/Ecommerce_site/frontend/src/components/review/ListReviews.js",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":7,"column":15,"nodeType":"297","messageId":"298","endLine":7,"endColumn":21},{"ruleId":"295","severity":1,"message":"299","line":7,"column":22,"nodeType":"297","messageId":"298","endLine":7,"endColumn":33},{"ruleId":"295","severity":1,"message":"300","line":7,"column":34,"nodeType":"297","messageId":"298","endLine":7,"endColumn":42},{"ruleId":"295","severity":1,"message":"301","line":11,"column":8,"nodeType":"297","messageId":"298","endLine":11,"endColumn":15},{"ruleId":"302","severity":1,"message":"303","line":50,"column":8,"nodeType":"304","endLine":50,"endColumn":77,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":29,"column":11,"nodeType":"308","endLine":29,"endColumn":48},{"ruleId":"295","severity":1,"message":"309","line":4,"column":28,"nodeType":"297","messageId":"298","endLine":4,"endColumn":39},{"ruleId":"295","severity":1,"message":"310","line":10,"column":8,"nodeType":"297","messageId":"298","endLine":10,"endColumn":16},{"ruleId":"302","severity":1,"message":"311","line":42,"column":8,"nodeType":"304","endLine":42,"endColumn":50,"suggestions":"312"},{"ruleId":"302","severity":1,"message":"313","line":28,"column":8,"nodeType":"304","endLine":28,"endColumn":54,"suggestions":"314"},{"ruleId":"295","severity":1,"message":"315","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":18},{"ruleId":"295","severity":1,"message":"316","line":5,"column":17,"nodeType":"297","messageId":"298","endLine":5,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":9,"column":16,"nodeType":"308","endLine":12,"endColumn":18},{"ruleId":"295","severity":1,"message":"317","line":2,"column":567,"nodeType":"297","messageId":"298","endLine":2,"endColumn":586},{"ruleId":"295","severity":1,"message":"318","line":13,"column":12,"nodeType":"297","messageId":"298","endLine":13,"endColumn":18},{"ruleId":"319","severity":1,"message":"320","line":47,"column":36,"nodeType":"321","messageId":"322","endLine":47,"endColumn":38},{"ruleId":"295","severity":1,"message":"323","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":14},{"ruleId":"295","severity":1,"message":"324","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":14},{"ruleId":"295","severity":1,"message":"325","line":6,"column":9,"nodeType":"297","messageId":"298","endLine":6,"endColumn":13},{"ruleId":"302","severity":1,"message":"326","line":37,"column":8,"nodeType":"304","endLine":37,"endColumn":48,"suggestions":"327"},{"ruleId":"319","severity":1,"message":"320","line":52,"column":36,"nodeType":"321","messageId":"322","endLine":52,"endColumn":38},{"ruleId":"295","severity":1,"message":"324","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":14},{"ruleId":"295","severity":1,"message":"325","line":6,"column":9,"nodeType":"297","messageId":"298","endLine":6,"endColumn":13},{"ruleId":"295","severity":1,"message":"328","line":7,"column":24,"nodeType":"297","messageId":"298","endLine":7,"endColumn":32},{"ruleId":"295","severity":1,"message":"329","line":16,"column":8,"nodeType":"297","messageId":"298","endLine":16,"endColumn":12},{"ruleId":"295","severity":1,"message":"328","line":7,"column":24,"nodeType":"297","messageId":"298","endLine":7,"endColumn":32},{"ruleId":"295","severity":1,"message":"328","line":7,"column":23,"nodeType":"297","messageId":"298","endLine":7,"endColumn":31},{"ruleId":"295","severity":1,"message":"330","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":18},{"ruleId":"295","severity":1,"message":"325","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"330","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":18},{"ruleId":"295","severity":1,"message":"331","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"330","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":40,"column":78,"nodeType":"334","messageId":"335","endLine":40,"endColumn":79},{"ruleId":"295","severity":1,"message":"331","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"325","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"336","line":50,"column":4,"nodeType":"304","endLine":50,"endColumn":26,"suggestions":"337"},{"ruleId":"319","severity":1,"message":"320","line":86,"column":33,"nodeType":"321","messageId":"322","endLine":86,"endColumn":35},{"ruleId":"295","severity":1,"message":"338","line":5,"column":22,"nodeType":"297","messageId":"298","endLine":5,"endColumn":33},{"ruleId":"302","severity":1,"message":"339","line":11,"column":7,"nodeType":"304","endLine":11,"endColumn":9,"suggestions":"340"},{"ruleId":"295","severity":1,"message":"331","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"331","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"330","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":18},{"ruleId":"302","severity":1,"message":"341","line":23,"column":8,"nodeType":"304","endLine":23,"endColumn":46,"suggestions":"342"},{"ruleId":"319","severity":1,"message":"320","line":25,"column":53,"nodeType":"321","messageId":"322","endLine":25,"endColumn":55},{"ruleId":"295","severity":1,"message":"331","line":1,"column":25,"nodeType":"297","messageId":"298","endLine":1,"endColumn":33},{"ruleId":"295","severity":1,"message":"309","line":6,"column":27,"nodeType":"297","messageId":"298","endLine":6,"endColumn":38},{"ruleId":"319","severity":1,"message":"320","line":24,"column":23,"nodeType":"321","messageId":"322","endLine":24,"endColumn":25},{"ruleId":"295","severity":1,"message":"331","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"343","line":9,"column":10,"nodeType":"297","messageId":"298","endLine":9,"endColumn":16},{"ruleId":"295","severity":1,"message":"324","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"325","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":14},{"ruleId":"295","severity":1,"message":"324","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"325","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":14},{"ruleId":"302","severity":1,"message":"344","line":73,"column":9,"nodeType":"304","endLine":73,"endColumn":67,"suggestions":"345"},{"ruleId":"295","severity":1,"message":"331","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":48,"column":53,"nodeType":"321","messageId":"322","endLine":48,"endColumn":55},{"ruleId":"295","severity":1,"message":"331","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"324","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":14},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Redirect' is defined but never used.","'product' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["348"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clearErrors' is defined but never used.","'MetaData' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["349"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["350"],"'Carousel' is defined but never used.","'loading' is assigned a value but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'avatar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loader' is defined but never used.","'Loader' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["351"],"'loadUser' is defined but never used.","'user' is assigned a value but never used.","'useAlert' is defined but never used.","'useState' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["352"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has an unnecessary dependency: 'alert'. Either exclude it or remove the dependency array. Outer scope values like 'alert' aren't valid dependencies because mutating them doesn't re-render the component.",["354"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'updateError'. Either include it or remove the dependency array.",["355"],"no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},"Update the dependencies array to be: [dispatch, alert, error, keyword, currentPage, price, category, rating, products]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, alert, error, reviewError, success, match.params.id]",{"range":"374","text":"375"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"376","text":"377"},"Update the dependencies array to be: [dispatch, alert, isUpdated, error, history, user]",{"range":"378","text":"379"},"Update the dependencies array to be: [alert, dispatch, error]",{"range":"380","text":"381"},"Update the dependencies array to be: [dispatch]",{"range":"382","text":"383"},"Update the dependencies array to be: [error, dispatch, match.params.id]",{"range":"384","text":"385"},"Update the dependencies array to be: [error, alert, isUpdated, history, dispatch, product, productId, updateError]",{"range":"386","text":"387"},[1784,1853],"[dispatch, alert, error, keyword, currentPage, price, category, rating, products]",[1656,1698],"[dispatch, alert, error, reviewError, success, match.params.id]",[1023,1069],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1347,1387],"[dispatch, alert, isUpdated, error, history, user]",[1548,1570],"[alert, dispatch, error]",[422,424],"[dispatch]",[889,927],"[error, dispatch, match.params.id]",[2443,2501],"[error, alert, isUpdated, history, dispatch, product, productId, updateError]"]